// Mocks generated by Mockito 5.0.16 from annotations
// in poc_clean/test/feature/cart/bloc/cart/cart_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:poc_clean/domain/entities/cart.dart' as _i4;
import 'package:poc_clean/domain/entities/product.dart' as _i5;
import 'package:poc_clean/feature/cart/repositories/cart_repository.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [CartRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartRepository extends _i1.Mock implements _i2.CartRepository {
  MockCartRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.Cart> addProduct(_i5.Product? product) => (super.noSuchMethod(Invocation.method(#addProduct, [product]), returnValue: Stream<_i4.Cart>.empty()) as _i3.Stream<_i4.Cart>);
  @override
  _i3.Stream<_i4.Cart> getCart() => (super.noSuchMethod(Invocation.method(#getCart, []), returnValue: Stream<_i4.Cart>.empty()) as _i3.Stream<_i4.Cart>);
}
